package f1_Info.constants;

import lombok.AllArgsConstructor;
import lombok.Getter;

import java.util.Arrays;

@Getter
@AllArgsConstructor
public enum FinishStatus {
    FINISHED(1),
    DISQUALIFIED(2),
    ACCIDENT(3),
    COLLISION(4),
    ENGINE(5),
    GEARBOX(6),
    TRANSMISSION(7),
    CLUTCH(8),
    HYDRAULICS(9),
    ELECTRICAL(10),
    PLUS_1_LAP(11),
    PLUS_2_LAPS(12),
    PLUS_3_LAPS(13),
    PLUS_4_LAPS(14),
    PLUS_5_LAPS(15),
    PLUS_6_LAPS(16),
    PLUS_7_LAPS(17),
    PLUS_8_LAPS(18),
    PLUS_9_LAPS(19),
    SPUN_OFF(20),
    RADIATOR(21),
    SUSPENSION(22),
    BRAKES(23),
    DIFFERENTIAL(24),
    OVERHEATING(25),
    MECHANICAL(26),
    TYRE(27),
    DRIVER_SEAT(28),
    PUNCTURE(29),
    DRIVESHAFT(30),
    RETIRED(31),
    FUEL_PRESSURE(32),
    FRONT_WING(33),
    WATER_PRESSURE(34),
    REFUELLING(35),
    WHEEL(36),
    THROTTLE(37),
    STEERING(38),
    TECHNICAL(39),
    ELECTRONICS(40),
    BROKEN_WING(41),
    HEAT_SHIELD_FIRE(42),
    EXHAUST(43),
    OIL_LEAK(44),
    PLUS_11_LAPS(45),
    WHEEL_RIM(46),
    WATER_LEAK(47),
    FUEL_PUMP(48),
    TRACK_ROD(49),
    PLUS_17_LAPS(50),
    OIL_PRESSURE(51),
    PLUS_13_LAPS(53),
    WITHDREW(54),
    PLUS_12_LAPS(55),
    ENGINE_FIRE(56),
    PLUS_26_LAPS(58),
    TYRE_PUNCTURE(59),
    OUT_OF_FUEL(60),
    WHEEL_NUT(61),
    NOT_CLASSIFIED(62),
    PNEUMATICS(63),
    HANDLING(64),
    REAR_WING(65),
    FIRE(66),
    WHEEL_BEARING(67),
    PHYSICAL(68),
    FUEL_SYSTEM(69),
    OIL_LINE(70),
    FUEL_RIG(71),
    LAUNCH_CONTROL(72),
    INJURED(73),
    FUEL(74),
    POWER_LOSS(75),
    VIBRATIONS(76),
    PERCENTAGE_107_RULE(77),
    SAFETY(78),
    DRIVETRAIN(79),
    IGNITION(80),
    DID_NOT_QUALIFY(81),
    INJURY(82),
    CHASSIS(83),
    BATTERY(84),
    STALLED(85),
    HALFSHAFT(86),
    CRANKSHAFT(87),
    PLUS_10_LAPS(88),
    SAFETY_CONCERNS(89),
    NOT_RESTARTED(90),
    ALTERNATOR(91),
    UNDERWEIGHT(92),
    SAFETY_BELT(93),
    OIL_PUMP(94),
    FUEL_LEAK(95),
    EXCLUDED(96),
    DID_NOT_PREQUALIFY(97),
    INJECTION(98),
    DISTRIBUTOR(99),
    DRIVER_UNWELL(100),
    TURBO(101),
    CV_JOINT(102),
    WATER_PUMP(103),
    FATAL_ACCIDENT(104),
    SPARK_PLUGS(105),
    FUEL_PIPE(106),
    EYE_INJURY(107),
    OIL_PIPE(108),
    AXLE(109),
    WATER_PIPE(110),
    PLUS_14_LAPS(111),
    PLUS_15_LAPS(112),
    PLUS_25_LAPS(113),
    PLUS_18_LAPS(114),
    PLUS_22_LAPS(115),
    PLUS_16_LAPS(116),
    PLUS_24_LAPS(117),
    PLUS_29_LAPS(118),
    PLUS_23_LAPS(119),
    PLUS_21_LAPS(120),
    MAGNETO(121),
    PLUS_44_LAPS(122),
    PLUS_30_LAPS(123),
    PLUS_19_LAPS(124),
    PLUS_46_LAPS(125),
    SUPERCHARGER(126),
    PLUS_20_LAPS(127),
    PLUS_42_LAPS(128),
    ENGINE_MISFIRE(129),
    COLLISION_DAMAGE(130),
    POWER_UNIT(131),
    ERS(132),
    BRAKE_DUCT(135),
    SEAT(136),
    DAMAGE(137),
    DEBRIS(138),
    ILLNESS(139);

    private final int mId;

    public static FinishStatus fromId(final int id) {
        return Arrays.stream(values())
            .filter(finishStatus -> finishStatus.mId == id)
            .findFirst()
            .orElseThrow(() -> new IllegalArgumentException(String.format("Unable to parse the id: %d to a valid finish status", id)));
    }

    public static boolean exists(final int id) {
        return Arrays.stream(values()).anyMatch(finishStatus -> finishStatus.mId == id);
    }
}
