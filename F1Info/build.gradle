buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'cz.habarta.typescript-generator:typescript-generator-gradle-plugin:2.36.1070'
    }
}

plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

apply plugin: 'cz.habarta.typescript-generator'

group = 'com.f1Info'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
    implementation project(':Common')
    implementation project(':Database')
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2'
	implementation group: 'com.google.guava', name: 'guava', version: '19.0'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.6.4'
	runtimeOnly 'mysql:mysql-connector-java:8.0.28'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.4'
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	testCompileOnly 'org.projectlombok:lombok:1.18.22'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'com.github.vladimir-bukhtoyarov', name: 'bucket4j-core', version: '7.5.0'
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'org.hashids:hashids:1.0.3'
}

generateTypeScript {
    classPatterns  = [
        'f1_Info.entry_points.**.**Response'
    ]
    jsonLibrary = 'jackson2'
    outputKind = 'module'
    outputFile = '../f1_info_frontend/src/generated/server-responses.d.ts'
}

build.dependsOn generateTypeScript

tasks.named('test') {
	useJUnitPlatform()
}
